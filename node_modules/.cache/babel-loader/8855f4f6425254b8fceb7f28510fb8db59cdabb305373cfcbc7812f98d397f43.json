{"ast":null,"code":"import { colorToHsl, getStyleFromHsl } from \"../../Utils/ColorUtils\";\nimport { getRangeValue } from \"../../Utils/NumberUtils\";\nexport class TwinkleUpdater {\n  getColorStyles(particle, context, radius, opacity) {\n    const pOptions = particle.options,\n      twinkle = pOptions.twinkle.particles,\n      twinkling = twinkle.enable && Math.random() < twinkle.frequency,\n      zIndexOptions = particle.options.zIndex,\n      zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate,\n      twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity,\n      twinkleRgb = colorToHsl(twinkle.color),\n      twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined,\n      res = {},\n      needsTwinkle = twinkling && twinkleStyle;\n    res.fill = needsTwinkle ? twinkleStyle : undefined;\n    res.stroke = needsTwinkle ? twinkleStyle : undefined;\n    return res;\n  }\n  init() {}\n  isEnabled(particle) {\n    return particle.options.twinkle.particles.enable;\n  }\n  update() {}\n}","map":{"version":3,"names":["colorToHsl","getStyleFromHsl","getRangeValue","TwinkleUpdater","getColorStyles","particle","context","radius","opacity","pOptions","options","twinkle","particles","twinkling","enable","Math","random","frequency","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","twinklingOpacity","twinkleRgb","color","twinkleStyle","undefined","res","needsTwinkle","fill","stroke","init","isEnabled","update"],"sources":["C:/Users/prana/Downloads/My E Health/demo-3/Text-Summarizer-main/node_modules/tsparticles/esm/Updaters/Twinkle/TwinkleUpdater.js"],"sourcesContent":["import { colorToHsl, getStyleFromHsl } from \"../../Utils/ColorUtils\";\nimport { getRangeValue } from \"../../Utils/NumberUtils\";\nexport class TwinkleUpdater {\n    getColorStyles(particle, context, radius, opacity) {\n        const pOptions = particle.options, twinkle = pOptions.twinkle.particles, twinkling = twinkle.enable && Math.random() < twinkle.frequency, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity, twinkleRgb = colorToHsl(twinkle.color), twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined, res = {}, needsTwinkle = twinkling && twinkleStyle;\n        res.fill = needsTwinkle ? twinkleStyle : undefined;\n        res.stroke = needsTwinkle ? twinkleStyle : undefined;\n        return res;\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return particle.options.twinkle.particles.enable;\n    }\n    update() {\n    }\n}\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,eAAe,QAAQ,wBAAwB;AACpE,SAASC,aAAa,QAAQ,yBAAyB;AACvD,OAAO,MAAMC,cAAc,CAAC;EACxBC,cAAcA,CAACC,QAAQ,EAAEC,OAAO,EAAEC,MAAM,EAAEC,OAAO,EAAE;IAC/C,MAAMC,QAAQ,GAAGJ,QAAQ,CAACK,OAAO;MAAEC,OAAO,GAAGF,QAAQ,CAACE,OAAO,CAACC,SAAS;MAAEC,SAAS,GAAGF,OAAO,CAACG,MAAM,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGL,OAAO,CAACM,SAAS;MAAEC,aAAa,GAAGb,QAAQ,CAACK,OAAO,CAACS,MAAM;MAAEC,cAAc,GAAG,CAAC,CAAC,GAAGf,QAAQ,CAACgB,YAAY,KAAKH,aAAa,CAACI,WAAW;MAAEC,gBAAgB,GAAGV,SAAS,GAAGX,aAAa,CAACS,OAAO,CAACH,OAAO,CAAC,GAAGY,cAAc,GAAGZ,OAAO;MAAEgB,UAAU,GAAGxB,UAAU,CAACW,OAAO,CAACc,KAAK,CAAC;MAAEC,YAAY,GAAGF,UAAU,GAAGvB,eAAe,CAACuB,UAAU,EAAED,gBAAgB,CAAC,GAAGI,SAAS;MAAEC,GAAG,GAAG,CAAC,CAAC;MAAEC,YAAY,GAAGhB,SAAS,IAAIa,YAAY;IACzgBE,GAAG,CAACE,IAAI,GAAGD,YAAY,GAAGH,YAAY,GAAGC,SAAS;IAClDC,GAAG,CAACG,MAAM,GAAGF,YAAY,GAAGH,YAAY,GAAGC,SAAS;IACpD,OAAOC,GAAG;EACd;EACAI,IAAIA,CAAA,EAAG,CACP;EACAC,SAASA,CAAC5B,QAAQ,EAAE;IAChB,OAAOA,QAAQ,CAACK,OAAO,CAACC,OAAO,CAACC,SAAS,CAACE,MAAM;EACpD;EACAoB,MAAMA,CAAA,EAAG,CACT;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}