{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particles_engine;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Particles = void 0;\nconst NumberUtils_1 = require(\"../Utils/NumberUtils\");\nconst InteractionManager_1 = require(\"./Utils/InteractionManager\");\nconst Particle_1 = require(\"./Particle\");\nconst ParticlesOptions_1 = require(\"../Options/Classes/Particles/ParticlesOptions\");\nconst Point_1 = require(\"./Utils/Point\");\nconst QuadTree_1 = require(\"./Utils/QuadTree\");\nconst Rectangle_1 = require(\"./Utils/Rectangle\");\nclass Particles {\n  constructor(engine, container) {\n    this.container = container;\n    _Particles_engine.set(this, void 0);\n    __classPrivateFieldSet(this, _Particles_engine, engine, \"f\");\n    this.nextId = 0;\n    this.array = [];\n    this.zArray = [];\n    this.limit = 0;\n    this.needsSort = false;\n    this.lastZIndex = 0;\n    this.freqs = {\n      links: new Map(),\n      triangles: new Map()\n    };\n    this.interactionManager = new InteractionManager_1.InteractionManager(__classPrivateFieldGet(this, _Particles_engine, \"f\"), container);\n    const canvasSize = this.container.canvas.size;\n    this.linksColors = new Map();\n    this.quadTree = new QuadTree_1.QuadTree(new Rectangle_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n    this.movers = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getMovers(container, true);\n    this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n  }\n  get count() {\n    return this.array.length;\n  }\n  init() {\n    var _a;\n    const container = this.container,\n      options = container.actualOptions;\n    this.lastZIndex = 0;\n    this.needsSort = false;\n    this.freqs.links = new Map();\n    this.freqs.triangles = new Map();\n    let handled = false;\n    this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n    this.interactionManager.init();\n    for (const [, plugin] of container.plugins) {\n      if (plugin.particlesInitialization !== undefined) {\n        handled = plugin.particlesInitialization();\n      }\n      if (handled) {\n        break;\n      }\n    }\n    this.addManualParticles();\n    if (!handled) {\n      for (const group in options.particles.groups) {\n        const groupOptions = options.particles.groups[group];\n        for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n          this.addParticle(undefined, groupOptions, group);\n        }\n      }\n      for (let i = this.count; i < options.particles.number.value; i++) {\n        this.addParticle();\n      }\n    }\n    container.pathGenerator.init(container);\n  }\n  async redraw() {\n    this.clear();\n    this.init();\n    await this.draw({\n      value: 0,\n      factor: 0\n    });\n  }\n  removeAt(index) {\n    let quantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let group = arguments.length > 2 ? arguments[2] : undefined;\n    let override = arguments.length > 3 ? arguments[3] : undefined;\n    if (!(index >= 0 && index <= this.count)) {\n      return;\n    }\n    let deleted = 0;\n    for (let i = index; deleted < quantity && i < this.count; i++) {\n      const particle = this.array[i];\n      if (!particle || particle.group !== group) {\n        continue;\n      }\n      particle.destroy(override);\n      this.array.splice(i--, 1);\n      const zIdx = this.zArray.indexOf(particle);\n      this.zArray.splice(zIdx, 1);\n      deleted++;\n    }\n  }\n  remove(particle, group, override) {\n    this.removeAt(this.array.indexOf(particle), undefined, group, override);\n  }\n  async update(delta) {\n    const container = this.container,\n      particlesToDelete = [];\n    container.pathGenerator.update();\n    for (const [, plugin] of container.plugins) {\n      if (plugin.update !== undefined) {\n        plugin.update(delta);\n      }\n    }\n    for (const particle of this.array) {\n      const resizeFactor = container.canvas.resizeFactor;\n      if (resizeFactor && !particle.ignoresResizeRatio) {\n        particle.position.x *= resizeFactor.width;\n        particle.position.y *= resizeFactor.height;\n      }\n      particle.ignoresResizeRatio = false;\n      particle.bubble.inRange = false;\n      for (const [, plugin] of this.container.plugins) {\n        if (particle.destroyed) {\n          break;\n        }\n        if (plugin.particleUpdate) {\n          plugin.particleUpdate(particle, delta);\n        }\n      }\n      for (const mover of this.movers) {\n        if (mover.isEnabled(particle)) {\n          mover.move(particle, delta);\n        }\n      }\n      if (particle.destroyed) {\n        particlesToDelete.push(particle);\n        continue;\n      }\n      this.quadTree.insert(new Point_1.Point(particle.getPosition(), particle));\n    }\n    for (const particle of particlesToDelete) {\n      this.remove(particle);\n    }\n    await this.interactionManager.externalInteract(delta);\n    for (const particle of container.particles.array) {\n      for (const updater of this.updaters) {\n        updater.update(particle, delta);\n      }\n      if (!particle.destroyed && !particle.spawning) {\n        await this.interactionManager.particlesInteract(particle, delta);\n      }\n    }\n    delete container.canvas.resizeFactor;\n  }\n  async draw(delta) {\n    const container = this.container,\n      canvasSize = this.container.canvas.size;\n    this.quadTree = new QuadTree_1.QuadTree(new Rectangle_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n    container.canvas.clear();\n    await this.update(delta);\n    if (this.needsSort) {\n      this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n      this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n      this.needsSort = false;\n    }\n    for (const [, plugin] of container.plugins) {\n      container.canvas.drawPlugin(plugin, delta);\n    }\n    for (const p of this.zArray) {\n      p.draw(delta);\n    }\n  }\n  clear() {\n    this.array = [];\n    this.zArray = [];\n  }\n  push(nb, mouse, overrideOptions, group) {\n    this.pushing = true;\n    for (let i = 0; i < nb; i++) {\n      this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n    }\n    this.pushing = false;\n  }\n  addParticle(position, overrideOptions, group) {\n    const container = this.container,\n      options = container.actualOptions,\n      limit = options.particles.number.limit * container.density;\n    if (limit > 0) {\n      const countToRemove = this.count + 1 - limit;\n      if (countToRemove > 0) {\n        this.removeQuantity(countToRemove);\n      }\n    }\n    return this.pushParticle(position, overrideOptions, group);\n  }\n  addSplitParticle(parent) {\n    const splitOptions = parent.options.destroy.split,\n      options = new ParticlesOptions_1.ParticlesOptions();\n    options.load(parent.options);\n    const factor = (0, NumberUtils_1.getRangeValue)(splitOptions.factor.value);\n    options.color.load({\n      value: {\n        hsl: parent.getFillColor()\n      }\n    });\n    if (typeof options.size.value === \"number\") {\n      options.size.value /= factor;\n    } else {\n      options.size.value.min /= factor;\n      options.size.value.max /= factor;\n    }\n    options.load(splitOptions.particles);\n    const offset = splitOptions.sizeOffset ? (0, NumberUtils_1.setRangeValue)(-parent.size.value, parent.size.value) : 0,\n      position = {\n        x: parent.position.x + (0, NumberUtils_1.randomInRange)(offset),\n        y: parent.position.y + (0, NumberUtils_1.randomInRange)(offset)\n      };\n    return this.pushParticle(position, options, parent.group, particle => {\n      if (particle.size.value < 0.5) {\n        return false;\n      }\n      particle.velocity.length = (0, NumberUtils_1.randomInRange)((0, NumberUtils_1.setRangeValue)(parent.velocity.length, particle.velocity.length));\n      particle.splitCount = parent.splitCount + 1;\n      particle.unbreakable = true;\n      setTimeout(() => {\n        particle.unbreakable = false;\n      }, 500);\n      return true;\n    });\n  }\n  removeQuantity(quantity, group) {\n    this.removeAt(0, quantity, group);\n  }\n  getLinkFrequency(p1, p2) {\n    const range = (0, NumberUtils_1.setRangeValue)(p1.id, p2.id),\n      key = `${(0, NumberUtils_1.getRangeMin)(range)}_${(0, NumberUtils_1.getRangeMax)(range)}`;\n    let res = this.freqs.links.get(key);\n    if (res === undefined) {\n      res = Math.random();\n      this.freqs.links.set(key, res);\n    }\n    return res;\n  }\n  getTriangleFrequency(p1, p2, p3) {\n    let [id1, id2, id3] = [p1.id, p2.id, p3.id];\n    if (id1 > id2) {\n      [id2, id1] = [id1, id2];\n    }\n    if (id2 > id3) {\n      [id3, id2] = [id2, id3];\n    }\n    if (id1 > id3) {\n      [id3, id1] = [id1, id3];\n    }\n    const key = `${id1}_${id2}_${id3}`;\n    let res = this.freqs.triangles.get(key);\n    if (res === undefined) {\n      res = Math.random();\n      this.freqs.triangles.set(key, res);\n    }\n    return res;\n  }\n  addManualParticles() {\n    const container = this.container,\n      options = container.actualOptions;\n    for (const particle of options.manualParticles) {\n      this.addParticle((0, NumberUtils_1.calcPositionFromSize)({\n        size: container.canvas.size,\n        position: particle.position\n      }), particle.options);\n    }\n  }\n  setDensity() {\n    const options = this.container.actualOptions;\n    for (const group in options.particles.groups) {\n      this.applyDensity(options.particles.groups[group], 0, group);\n    }\n    this.applyDensity(options.particles, options.manualParticles.length);\n  }\n  handleClickMode(mode) {\n    this.interactionManager.handleClickMode(mode);\n  }\n  applyDensity(options, manualCount, group) {\n    var _a;\n    if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n      return;\n    }\n    const numberOptions = options.number,\n      densityFactor = this.initDensityFactor(numberOptions.density),\n      optParticlesNumber = numberOptions.value,\n      optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber,\n      particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount,\n      particlesCount = Math.min(this.count, this.array.filter(t => t.group === group).length);\n    this.limit = numberOptions.limit * densityFactor;\n    if (particlesCount < particlesNumber) {\n      this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n    } else if (particlesCount > particlesNumber) {\n      this.removeQuantity(particlesCount - particlesNumber, group);\n    }\n  }\n  initDensityFactor(densityOptions) {\n    const container = this.container;\n    if (!container.canvas.element || !densityOptions.enable) {\n      return 1;\n    }\n    const canvas = container.canvas.element,\n      pxRatio = container.retina.pixelRatio;\n    return canvas.width * canvas.height / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n  }\n  pushParticle(position, overrideOptions, group, initializer) {\n    try {\n      const particle = new Particle_1.Particle(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.nextId, this.container, position, overrideOptions, group);\n      let canAdd = true;\n      if (initializer) {\n        canAdd = initializer(particle);\n      }\n      if (!canAdd) {\n        return;\n      }\n      this.array.push(particle);\n      this.zArray.push(particle);\n      this.nextId++;\n      return particle;\n    } catch (e) {\n      console.warn(`error adding particle: ${e}`);\n      return;\n    }\n  }\n}\nexports.Particles = Particles;\n_Particles_engine = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Particles_engine","Object","defineProperty","exports","Particles","NumberUtils_1","require","InteractionManager_1","Particle_1","ParticlesOptions_1","Point_1","QuadTree_1","Rectangle_1","constructor","engine","container","nextId","array","zArray","limit","needsSort","lastZIndex","freqs","links","Map","triangles","interactionManager","InteractionManager","canvasSize","canvas","size","linksColors","quadTree","QuadTree","Rectangle","width","height","movers","plugins","getMovers","updaters","getUpdaters","count","length","init","_a","options","actualOptions","handled","plugin","particlesInitialization","undefined","addManualParticles","group","particles","groups","groupOptions","i","j","number","addParticle","pathGenerator","redraw","clear","draw","factor","removeAt","index","quantity","arguments","override","deleted","particle","destroy","splice","zIdx","indexOf","remove","update","delta","particlesToDelete","resizeFactor","ignoresResizeRatio","position","x","y","bubble","inRange","destroyed","particleUpdate","mover","isEnabled","move","push","insert","Point","getPosition","externalInteract","updater","spawning","particlesInteract","sort","a","b","z","id","drawPlugin","p","nb","mouse","overrideOptions","pushing","density","countToRemove","removeQuantity","pushParticle","addSplitParticle","parent","splitOptions","split","ParticlesOptions","load","getRangeValue","color","hsl","getFillColor","min","max","offset","sizeOffset","setRangeValue","randomInRange","velocity","splitCount","unbreakable","setTimeout","getLinkFrequency","p1","p2","range","key","getRangeMin","getRangeMax","res","Math","random","getTriangleFrequency","p3","id1","id2","id3","manualParticles","calcPositionFromSize","setDensity","applyDensity","handleClickMode","mode","manualCount","enable","numberOptions","densityFactor","initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","t","abs","densityOptions","element","pxRatio","retina","pixelRatio","area","initializer","Particle","canAdd","e","console","warn","WeakMap"],"sources":["C:/Users/prana/Downloads/My E Health/demo-3/Text-Summarizer-main/node_modules/tsparticles/cjs/Core/Particles.js"],"sourcesContent":["\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particles_engine;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particles = void 0;\nconst NumberUtils_1 = require(\"../Utils/NumberUtils\");\nconst InteractionManager_1 = require(\"./Utils/InteractionManager\");\nconst Particle_1 = require(\"./Particle\");\nconst ParticlesOptions_1 = require(\"../Options/Classes/Particles/ParticlesOptions\");\nconst Point_1 = require(\"./Utils/Point\");\nconst QuadTree_1 = require(\"./Utils/QuadTree\");\nconst Rectangle_1 = require(\"./Utils/Rectangle\");\nclass Particles {\n    constructor(engine, container) {\n        this.container = container;\n        _Particles_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Particles_engine, engine, \"f\");\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n        this.interactionManager = new InteractionManager_1.InteractionManager(__classPrivateFieldGet(this, _Particles_engine, \"f\"), container);\n        const canvasSize = this.container.canvas.size;\n        this.linksColors = new Map();\n        this.quadTree = new QuadTree_1.QuadTree(new Rectangle_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getMovers(container, true);\n        this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        this.freqs.links = new Map();\n        this.freqs.triangles = new Map();\n        let handled = false;\n        this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n        container.pathGenerator.init(container);\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (!(index >= 0 && index <= this.count)) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            deleted++;\n        }\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    async update(delta) {\n        const container = this.container, particlesToDelete = [];\n        container.pathGenerator.update();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.update !== undefined) {\n                plugin.update(delta);\n            }\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            particle.bubble.inRange = false;\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point_1.Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of container.particles.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree_1.QuadTree(new Rectangle_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    addParticle(position, overrideOptions, group) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit * container.density;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this.pushParticle(position, overrideOptions, group);\n    }\n    addSplitParticle(parent) {\n        const splitOptions = parent.options.destroy.split, options = new ParticlesOptions_1.ParticlesOptions();\n        options.load(parent.options);\n        const factor = (0, NumberUtils_1.getRangeValue)(splitOptions.factor.value);\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitOptions.particles);\n        const offset = splitOptions.sizeOffset ? (0, NumberUtils_1.setRangeValue)(-parent.size.value, parent.size.value) : 0, position = {\n            x: parent.position.x + (0, NumberUtils_1.randomInRange)(offset),\n            y: parent.position.y + (0, NumberUtils_1.randomInRange)(offset),\n        };\n        return this.pushParticle(position, options, parent.group, (particle) => {\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = (0, NumberUtils_1.randomInRange)((0, NumberUtils_1.setRangeValue)(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = parent.splitCount + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    getLinkFrequency(p1, p2) {\n        const range = (0, NumberUtils_1.setRangeValue)(p1.id, p2.id), key = `${(0, NumberUtils_1.getRangeMin)(range)}_${(0, NumberUtils_1.getRangeMax)(range)}`;\n        let res = this.freqs.links.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.freqs.links.set(key, res);\n        }\n        return res;\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        let [id1, id2, id3] = [p1.id, p2.id, p3.id];\n        if (id1 > id2) {\n            [id2, id1] = [id1, id2];\n        }\n        if (id2 > id3) {\n            [id3, id2] = [id2, id3];\n        }\n        if (id1 > id3) {\n            [id3, id1] = [id1, id3];\n        }\n        const key = `${id1}_${id2}_${id3}`;\n        let res = this.freqs.triangles.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.freqs.triangles.set(key, res);\n        }\n        return res;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle((0, NumberUtils_1.calcPositionFromSize)({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this.applyDensity(options.particles.groups[group], 0, group);\n        }\n        this.applyDensity(options.particles, options.manualParticles.length);\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this.initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            const particle = new Particle_1.Particle(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.nextId, this.container, position, overrideOptions, group);\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\nexports.Particles = Particles;\n_Particles_engine = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}