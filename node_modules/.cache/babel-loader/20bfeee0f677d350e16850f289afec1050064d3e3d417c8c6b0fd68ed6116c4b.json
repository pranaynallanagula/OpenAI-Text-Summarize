{"ast":null,"code":"import { calcEasing, clamp, getDistances } from \"../../../Utils/NumberUtils\";\nimport { divMode, divModeExecute, isDivModeEnabled, isInArray } from \"../../../Utils/Utils\";\nimport { Circle } from \"../../../Core/Utils/Circle\";\nimport { Constants } from \"../../../Core/Utils/Constants\";\nimport { ExternalInteractorBase } from \"../../../Core/Utils/ExternalInteractorBase\";\nimport { Rectangle } from \"../../../Core/Utils/Rectangle\";\nimport { Vector } from \"../../../Core/Utils/Vector\";\nexport class Repulser extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n    if (!container.repulse) {\n      container.repulse = {\n        particles: []\n      };\n    }\n    this.handleClickMode = mode => {\n      const options = this.container.actualOptions;\n      if (mode !== \"repulse\") {\n        return;\n      }\n      if (!container.repulse) {\n        container.repulse = {\n          particles: []\n        };\n      }\n      container.repulse.clicking = true;\n      container.repulse.count = 0;\n      for (const particle of container.repulse.particles) {\n        particle.velocity.setTo(particle.initialVelocity);\n      }\n      container.repulse.particles = [];\n      container.repulse.finish = false;\n      setTimeout(() => {\n        if (!container.destroyed) {\n          if (!container.repulse) {\n            container.repulse = {\n              particles: []\n            };\n          }\n          container.repulse.clicking = false;\n        }\n      }, options.interactivity.modes.repulse.duration * 1000);\n    };\n  }\n  isEnabled() {\n    const container = this.container,\n      options = container.actualOptions,\n      mouse = container.interactivity.mouse,\n      events = options.interactivity.events,\n      divs = events.onDiv,\n      divRepulse = isDivModeEnabled(\"repulse\", divs);\n    if (!(divRepulse || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n      return false;\n    }\n    const hoverMode = events.onHover.mode,\n      clickMode = events.onClick.mode;\n    return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n  }\n  reset() {}\n  async interact() {\n    const container = this.container,\n      options = container.actualOptions,\n      mouseMoveStatus = container.interactivity.status === Constants.mouseMoveEvent,\n      events = options.interactivity.events,\n      hoverEnabled = events.onHover.enable,\n      hoverMode = events.onHover.mode,\n      clickEnabled = events.onClick.enable,\n      clickMode = events.onClick.mode,\n      divs = events.onDiv;\n    if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n      this.hoverRepulse();\n    } else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n      this.clickRepulse();\n    } else {\n      divModeExecute(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n    }\n  }\n  singleSelectorRepulse(selector, div) {\n    const container = this.container,\n      query = document.querySelectorAll(selector);\n    if (!query.length) {\n      return;\n    }\n    query.forEach(item => {\n      const elem = item,\n        pxRatio = container.retina.pixelRatio,\n        pos = {\n          x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n          y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n        },\n        repulseRadius = elem.offsetWidth / 2 * pxRatio,\n        area = div.type === \"circle\" ? new Circle(pos.x, pos.y, repulseRadius) : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio),\n        divs = container.actualOptions.interactivity.modes.repulse.divs,\n        divRepulse = divMode(divs, elem);\n      this.processRepulse(pos, repulseRadius, area, divRepulse);\n    });\n  }\n  hoverRepulse() {\n    const container = this.container,\n      mousePos = container.interactivity.mouse.position;\n    if (!mousePos) {\n      return;\n    }\n    const repulseRadius = container.retina.repulseModeDistance;\n    this.processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n  }\n  processRepulse(position, repulseRadius, area, divRepulse) {\n    var _a;\n    const container = this.container,\n      query = container.particles.quadTree.query(area),\n      repulseOptions = container.actualOptions.interactivity.modes.repulse;\n    for (const particle of query) {\n      const {\n          dx,\n          dy,\n          distance\n        } = getDistances(particle.position, position),\n        velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor,\n        repulseFactor = clamp(calcEasing(1 - distance / repulseRadius, repulseOptions.easing) * velocity, 0, repulseOptions.maxSpeed),\n        normVec = Vector.create(distance === 0 ? velocity : dx / distance * repulseFactor, distance === 0 ? velocity : dy / distance * repulseFactor);\n      particle.position.addTo(normVec);\n    }\n  }\n  clickRepulse() {\n    const container = this.container;\n    if (!container.repulse) {\n      container.repulse = {\n        particles: []\n      };\n    }\n    if (!container.repulse.finish) {\n      if (!container.repulse.count) {\n        container.repulse.count = 0;\n      }\n      container.repulse.count++;\n      if (container.repulse.count === container.particles.count) {\n        container.repulse.finish = true;\n      }\n    }\n    if (container.repulse.clicking) {\n      const repulseDistance = container.retina.repulseModeDistance,\n        repulseRadius = Math.pow(repulseDistance / 6, 3),\n        mouseClickPos = container.interactivity.mouse.clickPosition;\n      if (mouseClickPos === undefined) {\n        return;\n      }\n      const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius),\n        query = container.particles.quadTree.query(range);\n      for (const particle of query) {\n        const {\n            dx,\n            dy,\n            distance\n          } = getDistances(mouseClickPos, particle.position),\n          d = distance ** 2,\n          velocity = container.actualOptions.interactivity.modes.repulse.speed,\n          force = -repulseRadius * velocity / d;\n        if (d <= repulseRadius) {\n          container.repulse.particles.push(particle);\n          const vect = Vector.create(dx, dy);\n          vect.length = force;\n          particle.velocity.setTo(vect);\n        }\n      }\n    } else if (container.repulse.clicking === false) {\n      for (const particle of container.repulse.particles) {\n        particle.velocity.setTo(particle.initialVelocity);\n      }\n      container.repulse.particles = [];\n    }\n  }\n}","map":{"version":3,"names":["calcEasing","clamp","getDistances","divMode","divModeExecute","isDivModeEnabled","isInArray","Circle","Constants","ExternalInteractorBase","Rectangle","Vector","Repulser","constructor","container","repulse","particles","handleClickMode","mode","options","actualOptions","clicking","count","particle","velocity","setTo","initialVelocity","finish","setTimeout","destroyed","interactivity","modes","duration","isEnabled","mouse","events","divs","onDiv","divRepulse","onHover","enable","position","onClick","clickPosition","hoverMode","clickMode","reset","interact","mouseMoveStatus","status","mouseMoveEvent","hoverEnabled","clickEnabled","hoverRepulse","clickRepulse","selector","div","singleSelectorRepulse","query","document","querySelectorAll","length","forEach","item","elem","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","repulseRadius","area","type","processRepulse","mousePos","repulseModeDistance","_a","quadTree","repulseOptions","dx","dy","distance","speed","factor","repulseFactor","easing","maxSpeed","normVec","create","addTo","repulseDistance","Math","pow","mouseClickPos","undefined","range","d","force","push","vect"],"sources":["C:/Users/prana/Downloads/My E Health/demo-3/Text-Summarizer-main/node_modules/tsparticles/esm/Interactions/External/Repulse/Repulser.js"],"sourcesContent":["import { calcEasing, clamp, getDistances } from \"../../../Utils/NumberUtils\";\nimport { divMode, divModeExecute, isDivModeEnabled, isInArray } from \"../../../Utils/Utils\";\nimport { Circle } from \"../../../Core/Utils/Circle\";\nimport { Constants } from \"../../../Core/Utils/Constants\";\nimport { ExternalInteractorBase } from \"../../../Core/Utils/ExternalInteractorBase\";\nimport { Rectangle } from \"../../../Core/Utils/Rectangle\";\nimport { Vector } from \"../../../Core/Utils/Vector\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions;\n            if (mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            container.repulse.clicking = true;\n            container.repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n            container.repulse.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.repulse) {\n                        container.repulse = { particles: [] };\n                    }\n                    container.repulse.clicking = false;\n                }\n            }, options.interactivity.modes.repulse.duration * 1000);\n        };\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events, divs = events.onDiv, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    reset() {\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === Constants.mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container, query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = container.actualOptions.interactivity.modes.repulse.divs, divRepulse = divMode(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n    hoverRepulse() {\n        const container = this.container, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const repulseRadius = container.retina.repulseModeDistance;\n        this.processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container, query = container.particles.quadTree.query(area), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position), velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(calcEasing(1 - distance / repulseRadius, repulseOptions.easing) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n            particle.position.addTo(normVec);\n        }\n    }\n    clickRepulse() {\n        const container = this.container;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance, repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range);\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = container.actualOptions.interactivity.modes.repulse.speed, force = (-repulseRadius * velocity) / d;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const vect = Vector.create(dx, dy);\n                    vect.length = force;\n                    particle.velocity.setTo(vect);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}