{"ast":null,"code":"import { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nimport { isInArray } from \"../../Utils/Utils\";\nclass AbsorbersPlugin {\n  constructor() {\n    this.id = \"absorbers\";\n  }\n  getPlugin(container) {\n    return new Absorbers(container);\n  }\n  needsPlugin(options) {\n    var _a, _b, _c;\n    if (options === undefined) {\n      return false;\n    }\n    const absorbers = options.absorbers;\n    if (absorbers instanceof Array) {\n      return !!absorbers.length;\n    } else if (absorbers) {\n      return true;\n    } else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) && isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n      return true;\n    }\n    return false;\n  }\n  loadOptions(options, source) {\n    var _a, _b;\n    if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n      return;\n    }\n    const optionsCast = options;\n    if (source === null || source === void 0 ? void 0 : source.absorbers) {\n      if ((source === null || source === void 0 ? void 0 : source.absorbers) instanceof Array) {\n        optionsCast.absorbers = source === null || source === void 0 ? void 0 : source.absorbers.map(s => {\n          const tmp = new Absorber();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        let absorberOptions = optionsCast.absorbers;\n        if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n          optionsCast.absorbers = absorberOptions = new Absorber();\n        }\n        absorberOptions.load(source === null || source === void 0 ? void 0 : source.absorbers);\n      }\n    }\n    const interactivityAbsorbers = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n    if (interactivityAbsorbers) {\n      if (interactivityAbsorbers instanceof Array) {\n        optionsCast.interactivity.modes.absorbers = interactivityAbsorbers.map(s => {\n          const tmp = new Absorber();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        let absorberOptions = optionsCast.interactivity.modes.absorbers;\n        if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n          optionsCast.interactivity.modes.absorbers = absorberOptions = new Absorber();\n        }\n        absorberOptions.load(interactivityAbsorbers);\n      }\n    }\n  }\n}\nexport async function loadAbsorbersPlugin(engine) {\n  const plugin = new AbsorbersPlugin();\n  await engine.addPlugin(plugin);\n}\nexport * from \"./Enums/AbsorberClickMode\";\nexport * from \"./Options/Interfaces/IAbsorberOptions\";","map":{"version":3,"names":["Absorber","Absorbers","isInArray","AbsorbersPlugin","constructor","id","getPlugin","container","needsPlugin","options","_a","_b","_c","undefined","absorbers","Array","length","interactivity","events","onClick","mode","loadOptions","source","optionsCast","map","s","tmp","load","absorberOptions","interactivityAbsorbers","modes","loadAbsorbersPlugin","engine","plugin","addPlugin"],"sources":["C:/Users/prana/Downloads/My E Health/demo-3/Text-Summarizer-main/node_modules/tsparticles/esm/Plugins/Absorbers/index.js"],"sourcesContent":["import { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nimport { isInArray } from \"../../Utils/Utils\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (options === undefined) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (absorbers instanceof Array) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        if (source === null || source === void 0 ? void 0 : source.absorbers) {\n            if ((source === null || source === void 0 ? void 0 : source.absorbers) instanceof Array) {\n                optionsCast.absorbers = source === null || source === void 0 ? void 0 : source.absorbers.map((s) => {\n                    const tmp = new Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let absorberOptions = optionsCast.absorbers;\n                if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n                    optionsCast.absorbers = absorberOptions = new Absorber();\n                }\n                absorberOptions.load(source === null || source === void 0 ? void 0 : source.absorbers);\n            }\n        }\n        const interactivityAbsorbers = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                optionsCast.interactivity.modes.absorbers = interactivityAbsorbers.map((s) => {\n                    const tmp = new Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let absorberOptions = optionsCast.interactivity.modes.absorbers;\n                if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n                    optionsCast.interactivity.modes.absorbers = absorberOptions = new Absorber();\n                }\n                absorberOptions.load(interactivityAbsorbers);\n            }\n        }\n    }\n}\nexport async function loadAbsorbersPlugin(engine) {\n    const plugin = new AbsorbersPlugin();\n    await engine.addPlugin(plugin);\n}\nexport * from \"./Enums/AbsorberClickMode\";\nexport * from \"./Options/Interfaces/IAbsorberOptions\";\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,MAAMC,eAAe,CAAC;EAClBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,EAAE,GAAG,WAAW;EACzB;EACAC,SAASA,CAACC,SAAS,EAAE;IACjB,OAAO,IAAIN,SAAS,CAACM,SAAS,CAAC;EACnC;EACAC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE;IACd,IAAIH,OAAO,KAAKI,SAAS,EAAE;MACvB,OAAO,KAAK;IAChB;IACA,MAAMC,SAAS,GAAGL,OAAO,CAACK,SAAS;IACnC,IAAIA,SAAS,YAAYC,KAAK,EAAE;MAC5B,OAAO,CAAC,CAACD,SAAS,CAACE,MAAM;IAC7B,CAAC,MACI,IAAIF,SAAS,EAAE;MAChB,OAAO,IAAI;IACf,CAAC,MACI,IAAI,CAAC,CAACF,EAAE,GAAG,CAACD,EAAE,GAAG,CAACD,EAAE,GAAGD,OAAO,CAACQ,aAAa,MAAM,IAAI,IAAIP,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACQ,MAAM,MAAM,IAAI,IAAIP,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACQ,OAAO,MAAM,IAAI,IAAIP,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACQ,IAAI,KAC5LlB,SAAS,CAAC,UAAU,EAAEO,OAAO,CAACQ,aAAa,CAACC,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,EAAE;MAClE,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;EACAC,WAAWA,CAACZ,OAAO,EAAEa,MAAM,EAAE;IACzB,IAAIZ,EAAE,EAAEC,EAAE;IACV,IAAI,CAAC,IAAI,CAACH,WAAW,CAACC,OAAO,CAAC,IAAI,CAAC,IAAI,CAACD,WAAW,CAACc,MAAM,CAAC,EAAE;MACzD;IACJ;IACA,MAAMC,WAAW,GAAGd,OAAO;IAC3B,IAAIa,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACR,SAAS,EAAE;MAClE,IAAI,CAACQ,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACR,SAAS,aAAaC,KAAK,EAAE;QACrFQ,WAAW,CAACT,SAAS,GAAGQ,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACR,SAAS,CAACU,GAAG,CAAEC,CAAC,IAAK;UAChG,MAAMC,GAAG,GAAG,IAAI1B,QAAQ,CAAC,CAAC;UAC1B0B,GAAG,CAACC,IAAI,CAACF,CAAC,CAAC;UACX,OAAOC,GAAG;QACd,CAAC,CAAC;MACN,CAAC,MACI;QACD,IAAIE,eAAe,GAAGL,WAAW,CAACT,SAAS;QAC3C,IAAI,CAACc,eAAe,KAAK,IAAI,IAAIA,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACD,IAAI,MAAMd,SAAS,EAAE;UACxGU,WAAW,CAACT,SAAS,GAAGc,eAAe,GAAG,IAAI5B,QAAQ,CAAC,CAAC;QAC5D;QACA4B,eAAe,CAACD,IAAI,CAACL,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACR,SAAS,CAAC;MAC1F;IACJ;IACA,MAAMe,sBAAsB,GAAG,CAAClB,EAAE,GAAG,CAACD,EAAE,GAAGY,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACL,aAAa,MAAM,IAAI,IAAIP,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACoB,KAAK,MAAM,IAAI,IAAInB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,SAAS;IACjN,IAAIe,sBAAsB,EAAE;MACxB,IAAIA,sBAAsB,YAAYd,KAAK,EAAE;QACzCQ,WAAW,CAACN,aAAa,CAACa,KAAK,CAAChB,SAAS,GAAGe,sBAAsB,CAACL,GAAG,CAAEC,CAAC,IAAK;UAC1E,MAAMC,GAAG,GAAG,IAAI1B,QAAQ,CAAC,CAAC;UAC1B0B,GAAG,CAACC,IAAI,CAACF,CAAC,CAAC;UACX,OAAOC,GAAG;QACd,CAAC,CAAC;MACN,CAAC,MACI;QACD,IAAIE,eAAe,GAAGL,WAAW,CAACN,aAAa,CAACa,KAAK,CAAChB,SAAS;QAC/D,IAAI,CAACc,eAAe,KAAK,IAAI,IAAIA,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACD,IAAI,MAAMd,SAAS,EAAE;UACxGU,WAAW,CAACN,aAAa,CAACa,KAAK,CAAChB,SAAS,GAAGc,eAAe,GAAG,IAAI5B,QAAQ,CAAC,CAAC;QAChF;QACA4B,eAAe,CAACD,IAAI,CAACE,sBAAsB,CAAC;MAChD;IACJ;EACJ;AACJ;AACA,OAAO,eAAeE,mBAAmBA,CAACC,MAAM,EAAE;EAC9C,MAAMC,MAAM,GAAG,IAAI9B,eAAe,CAAC,CAAC;EACpC,MAAM6B,MAAM,CAACE,SAAS,CAACD,MAAM,CAAC;AAClC;AACA,cAAc,2BAA2B;AACzC,cAAc,uCAAuC"},"metadata":{},"sourceType":"module","externalDependencies":[]}