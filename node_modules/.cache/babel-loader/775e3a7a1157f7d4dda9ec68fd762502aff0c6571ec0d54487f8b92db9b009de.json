{"ast":null,"code":"import { Vector } from \"./Vector\";\nexport class Vector3d extends Vector {\n  constructor(xOrCoords, y, z) {\n    super(xOrCoords, y);\n    if (typeof xOrCoords !== \"number\" && xOrCoords) {\n      this.z = xOrCoords.z;\n    } else if (z !== undefined) {\n      this.z = z;\n    } else {\n      throw new Error(\"tsParticles - Vector not initialized correctly\");\n    }\n  }\n  static clone(source) {\n    return Vector3d.create(source.x, source.y, source.z);\n  }\n  static create(x, y, z) {\n    return new Vector3d(x, y, z);\n  }\n  static get origin() {\n    return Vector3d.create(0, 0, 0);\n  }\n  add(v) {\n    return v instanceof Vector3d ? Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z) : super.add(v);\n  }\n  addTo(v) {\n    super.addTo(v);\n    if (v instanceof Vector3d) {\n      this.z += v.z;\n    }\n  }\n  sub(v) {\n    return v instanceof Vector3d ? Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z) : super.sub(v);\n  }\n  subFrom(v) {\n    super.subFrom(v);\n    if (v instanceof Vector3d) {\n      this.z -= v.z;\n    }\n  }\n  mult(n) {\n    return Vector3d.create(this.x * n, this.y * n, this.z * n);\n  }\n  multTo(n) {\n    super.multTo(n);\n    this.z *= n;\n  }\n  div(n) {\n    return Vector3d.create(this.x / n, this.y / n, this.z / n);\n  }\n  divTo(n) {\n    super.divTo(n);\n    this.z /= n;\n  }\n  copy() {\n    return Vector3d.clone(this);\n  }\n  setTo(v) {\n    super.setTo(v);\n    const v3d = v;\n    if (v3d.z !== undefined) {\n      this.z = v3d.z;\n    }\n  }\n}","map":{"version":3,"names":["Vector","Vector3d","constructor","xOrCoords","y","z","undefined","Error","clone","source","create","x","origin","add","v","addTo","sub","subFrom","mult","n","multTo","div","divTo","copy","setTo","v3d"],"sources":["C:/Users/prana/Downloads/My E Health/demo-3/Text-Summarizer-main/node_modules/tsparticles/esm/Core/Utils/Vector3d.js"],"sourcesContent":["import { Vector } from \"./Vector\";\nexport class Vector3d extends Vector {\n    constructor(xOrCoords, y, z) {\n        super(xOrCoords, y);\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\n            this.z = xOrCoords.z;\n        }\n        else if (z !== undefined) {\n            this.z = z;\n        }\n        else {\n            throw new Error(\"tsParticles - Vector not initialized correctly\");\n        }\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    add(v) {\n        return v instanceof Vector3d ? Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z) : super.add(v);\n    }\n    addTo(v) {\n        super.addTo(v);\n        if (v instanceof Vector3d) {\n            this.z += v.z;\n        }\n    }\n    sub(v) {\n        return v instanceof Vector3d ? Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z) : super.sub(v);\n    }\n    subFrom(v) {\n        super.subFrom(v);\n        if (v instanceof Vector3d) {\n            this.z -= v.z;\n        }\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        super.multTo(n);\n        this.z *= n;\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        super.divTo(n);\n        this.z /= n;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    setTo(v) {\n        super.setTo(v);\n        const v3d = v;\n        if (v3d.z !== undefined) {\n            this.z = v3d.z;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}