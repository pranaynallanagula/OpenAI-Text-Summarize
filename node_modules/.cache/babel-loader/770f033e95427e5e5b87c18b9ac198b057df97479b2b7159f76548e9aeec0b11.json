{"ast":null,"code":"import { Circle } from \"./Circle\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n  constructor(rectangle, capacity) {\n    this.rectangle = rectangle;\n    this.capacity = capacity;\n    this.points = [];\n    this.divided = false;\n  }\n  insert(point) {\n    var _a, _b, _c, _d, _e;\n    if (!this.rectangle.contains(point.position)) {\n      return false;\n    }\n    if (this.points.length < this.capacity) {\n      this.points.push(point);\n      return true;\n    }\n    if (!this.divided) {\n      this.subdivide();\n    }\n    return (_e = ((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) || ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) || ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) || ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point))) !== null && _e !== void 0 ? _e : false;\n  }\n  queryCircle(position, radius) {\n    return this.query(new Circle(position.x, position.y, radius));\n  }\n  queryCircleWarp(position, radius, containerOrSize) {\n    const container = containerOrSize,\n      size = containerOrSize;\n    return this.query(new CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n  }\n  queryRectangle(position, size) {\n    return this.query(new Rectangle(position.x, position.y, size.width, size.height));\n  }\n  query(range, found) {\n    var _a, _b, _c, _d;\n    const res = found !== null && found !== void 0 ? found : [];\n    if (!range.intersects(this.rectangle)) {\n      return [];\n    }\n    for (const p of this.points) {\n      if (!range.contains(p.position) && getDistance(range.position, p.position) > p.particle.getRadius()) {\n        continue;\n      }\n      res.push(p.particle);\n    }\n    if (this.divided) {\n      (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n      (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n      (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n      (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n    }\n    return res;\n  }\n  subdivide() {\n    const x = this.rectangle.position.x,\n      y = this.rectangle.position.y,\n      w = this.rectangle.size.width,\n      h = this.rectangle.size.height,\n      capacity = this.capacity;\n    this.northEast = new QuadTree(new Rectangle(x, y, w / 2, h / 2), capacity);\n    this.northWest = new QuadTree(new Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n    this.southEast = new QuadTree(new Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n    this.southWest = new QuadTree(new Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n    this.divided = true;\n  }\n}","map":{"version":3,"names":["Circle","CircleWarp","Rectangle","getDistance","QuadTree","constructor","rectangle","capacity","points","divided","insert","point","_a","_b","_c","_d","_e","contains","position","length","push","subdivide","northEast","northWest","southEast","southWest","queryCircle","radius","query","x","y","queryCircleWarp","containerOrSize","container","size","canvas","undefined","queryRectangle","width","height","range","found","res","intersects","p","particle","getRadius","w","h"],"sources":["C:/Users/prana/Downloads/My E Health/demo-3/Text-Summarizer-main/node_modules/tsparticles/esm/Core/Utils/QuadTree.js"],"sourcesContent":["import { Circle } from \"./Circle\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this.points = [];\n        this.divided = false;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this.points.length < this.capacity) {\n            this.points.push(point);\n            return true;\n        }\n        if (!this.divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    queryCircle(position, radius) {\n        return this.query(new Circle(position.x, position.y, radius));\n    }\n    queryCircleWarp(position, radius, containerOrSize) {\n        const container = containerOrSize, size = containerOrSize;\n        return this.query(new CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n    }\n    queryRectangle(position, size) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height));\n    }\n    query(range, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this.points) {\n            if (!range.contains(p.position) && getDistance(range.position, p.position) > p.particle.getRadius()) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this.divided) {\n            (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n            (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n            (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n            (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n        }\n        return res;\n    }\n    subdivide() {\n        const x = this.rectangle.position.x, y = this.rectangle.position.y, w = this.rectangle.size.width, h = this.rectangle.size.height, capacity = this.capacity;\n        this.northEast = new QuadTree(new Rectangle(x, y, w / 2, h / 2), capacity);\n        this.northWest = new QuadTree(new Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this.southEast = new QuadTree(new Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this.southWest = new QuadTree(new Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this.divided = true;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}